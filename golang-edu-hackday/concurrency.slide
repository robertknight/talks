Go - Concurrency

18 Jun 2014

* Concurrency features

Go's _raison_d'Ãªtre_ is concurrency. Built on two main features:

- Goroutines
- Channels

* Goroutines

A _goroutine_ is a lightweight thread, there can be millions
at once.

Goroutines are created by putting _go_ in front of a function call.

	go func() {
		// ...
	}()

This creates a new goroutine. The Go runtime schedules goroutines
onto actual threads.

* Goroutines - Demo

.play code/goroutine.go

* Concurrency models - Event Loops

(Qt, Objective C, Android, Node.js, Twisted)

.image http://dailypicksandflicks.com/wp-content/uploads/2011/09/Chess-cat.jpg

* Concurrency models

.image http://cdn0.vox-cdn.com/entry_photo_images/8379899/WiiU_SmashBros_scrnS01_08_E3.jpg 500 800

* Goroutines

Goroutines are not first class values

- No way to determine current Goroutine ID
- No way to wait on a particular Goroutine

Goroutines _can_ share memory - need to be careful here,
data races are possible. There are primitives (mutexes etc.)
to protect access to data from multiple values.

But there is a better way to share data between goroutines - channels.

* Goroutines

Widely used in standard library

.play code/timers.go

* Channels

Primary means of communication between goroutines.
Pipe which you can send or receive values of a particular type on.

Two types - Buffered and unbuffered

Sending _blocks_ if channel is full 
Receiving _blocks_ until a value is available to read

.play code/chan.go

* Channels - Buffered

.play code/chan_buffer.go

* Channels as Values

Channels can be passed around and returned as values.

.play code/time_tick.go

* Goroutines & Web Requests

Making the site health checker concurrent:

.play code/site-health.go /START OMIT/,/END OMIT/

See code/site-health.go

* Goroutines - Gotcha

Remember that func captures variables by reference:

.play code/site-health-broken.go /START OMIT/,/END OMIT/

Find problems with

	go run -race code/site-health-broken.go

* Select

The _select_ statement can be used to wait on multiple channels.

.play code/select.go /START OMIT/,/END OMIT/
